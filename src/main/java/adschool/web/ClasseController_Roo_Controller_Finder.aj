// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package adschool.web;

import adschool.domain.Classe;
import adschool.domain.Filiere;
import adschool.domain.Options;
import java.lang.Boolean;
import java.lang.String;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect ClasseController_Roo_Controller_Finder {
    
    @RequestMapping(params = { "find=ByActif", "form" }, method = RequestMethod.GET)
    public String ClasseController.findClassesByActifForm(Model uiModel) {
        return "classes/findClassesByActif";
    }
    
    @RequestMapping(params = "find=ByActif", method = RequestMethod.GET)
    public String ClasseController.findClassesByActif(@RequestParam(value = "actif", required = false) Boolean actif, Model uiModel) {
        uiModel.addAttribute("classes", Classe.findClassesByActif(actif == null ? new Boolean(false) : actif).getResultList());
        return "classes/list";
    }
    
    @RequestMapping(params = { "find=ByFiliere", "form" }, method = RequestMethod.GET)
    public String ClasseController.findClassesByFiliereForm(Model uiModel) {
        uiModel.addAttribute("filieres", Filiere.findAllFilieres());
        return "classes/findClassesByFiliere";
    }
    
    @RequestMapping(params = "find=ByFiliere", method = RequestMethod.GET)
    public String ClasseController.findClassesByFiliere(@RequestParam("filiere") Filiere filiere, Model uiModel) {
        uiModel.addAttribute("classes", Classe.findClassesByFiliere(filiere).getResultList());
        return "classes/list";
    }
    
    @RequestMapping(params = { "find=ByNomClasseLike", "form" }, method = RequestMethod.GET)
    public String ClasseController.findClassesByNomClasseLikeForm(Model uiModel) {
        return "classes/findClassesByNomClasseLike";
    }
    
    @RequestMapping(params = "find=ByNomClasseLike", method = RequestMethod.GET)
    public String ClasseController.findClassesByNomClasseLike(@RequestParam("nomClasse") String nomClasse, Model uiModel) {
        uiModel.addAttribute("classes", Classe.findClassesByNomClasseLike(nomClasse).getResultList());
        return "classes/list";
    }
    
    @RequestMapping(params = { "find=ByNomClasseNotEquals", "form" }, method = RequestMethod.GET)
    public String ClasseController.findClassesByNomClasseNotEqualsForm(Model uiModel) {
        return "classes/findClassesByNomClasseNotEquals";
    }
    
    @RequestMapping(params = "find=ByNomClasseNotEquals", method = RequestMethod.GET)
    public String ClasseController.findClassesByNomClasseNotEquals(@RequestParam("nomClasse") String nomClasse, Model uiModel) {
        uiModel.addAttribute("classes", Classe.findClassesByNomClasseNotEquals(nomClasse).getResultList());
        return "classes/list";
    }
    
    @RequestMapping(params = { "find=ByOptions", "form" }, method = RequestMethod.GET)
    public String ClasseController.findClassesByOptionsForm(Model uiModel) {
        uiModel.addAttribute("optionses", Options.findAllOptionses());
        return "classes/findClassesByOptions";
    }
    
    @RequestMapping(params = "find=ByOptions", method = RequestMethod.GET)
    public String ClasseController.findClassesByOptions(@RequestParam("options") Options options, Model uiModel) {
        uiModel.addAttribute("classes", Classe.findClassesByOptions(options).getResultList());
        return "classes/list";
    }
    
}
