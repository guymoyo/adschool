// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package adschool.web;

import adschool.domain.Eleve;
import adschool.domain.Etablissement;
import adschool.domain.Genre;
import adschool.domain.Parent;
import adschool.domain.Pays;
import java.io.UnsupportedEncodingException;
import java.lang.Long;
import java.lang.String;
import java.util.Arrays;
import java.util.Collection;
import javax.servlet.http.HttpServletRequest;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;

privileged aspect EleveController_Roo_Controller {
    
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public String EleveController.show(@PathVariable("id") Long id, Model uiModel) {
        addDateTimeFormatPatterns(uiModel);
        uiModel.addAttribute("eleve", Eleve.findEleve(id));
        uiModel.addAttribute("itemId", id);
        return "eleves/show";
    }
    
    @RequestMapping(value = "/{id}", params = "form", method = RequestMethod.GET)
    public String EleveController.updateForm(@PathVariable("id") Long id, Model uiModel) {
        uiModel.addAttribute("eleve", Eleve.findEleve(id));
        addDateTimeFormatPatterns(uiModel);
        return "eleves/update";
    }
    
    @ModelAttribute("eleves")
    public Collection<Eleve> EleveController.populateEleves() {
        return Eleve.findAllEleves();
    }
    
    @ModelAttribute("etablissements")
    public Collection<Etablissement> EleveController.populateEtablissements() {
        return Etablissement.findAllEtablissements();
    }
    
    @ModelAttribute("genres")
    public Collection<Genre> EleveController.populateGenres() {
        return Arrays.asList(Genre.class.getEnumConstants());
    }
    
    @ModelAttribute("parents")
    public Collection<Parent> EleveController.populateParents() {
        return Parent.findAllParents();
    }
    
    @ModelAttribute("payses")
    public Collection<Pays> EleveController.populatePayses() {
        return Pays.findAllPayses();
    }
    
    void EleveController.addDateTimeFormatPatterns(Model uiModel) {
        uiModel.addAttribute("eleve_datenaissance_date_format", "dd-MM-yyyy");
    }
    
    String EleveController.encodeUrlPathSegment(String pathSegment, HttpServletRequest httpServletRequest) {
        String enc = httpServletRequest.getCharacterEncoding();
        if (enc == null) {
            enc = WebUtils.DEFAULT_CHARACTER_ENCODING;
        }
        try {
            pathSegment = UriUtils.encodePathSegment(pathSegment, enc);
        }
        catch (UnsupportedEncodingException uee) {}
        return pathSegment;
    }
    
}
