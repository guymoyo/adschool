// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package adschool.web;

import adschool.domain.AbsenceEleves;
import adschool.domain.AuditRecord;
import adschool.domain.AvertissementEleves;
import adschool.domain.Batiment;
import adschool.domain.Classe;
import adschool.domain.ConfigInscription;
import adschool.domain.ConfigPension;
import adschool.domain.ConsigneEleves;
import adschool.domain.Cycles;
import adschool.domain.Diplome;
import adschool.domain.Enseignant;
import adschool.domain.EnseignantMatieres;
import adschool.domain.EnseignantPrincipal;
import adschool.domain.Evaluation;
import adschool.domain.ExclusionEleves;
import adschool.domain.FamilleMatiere;
import adschool.domain.Filiere;
import adschool.domain.FootPrint;
import adschool.domain.GroupeMatiere;
import adschool.domain.ImportNote;
import adschool.domain.Machines;
import adschool.domain.Matiere;
import adschool.domain.Mentions;
import adschool.domain.Notes;
import adschool.domain.Occupation;
import adschool.domain.Options;
import adschool.domain.PaiementPensions;
import adschool.domain.Parent;
import adschool.domain.Pays;
import adschool.domain.Periode;
import adschool.domain.PointageEnseignants;
import adschool.domain.Regime;
import adschool.domain.Salle;
import adschool.domain.Speciality;
import adschool.security.AdSchoolUser;
import java.lang.String;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(new AbsenceElevesConverter());
        registry.addConverter(new AuditRecordConverter());
        registry.addConverter(new AvertissementElevesConverter());
        registry.addConverter(new BatimentConverter());
        registry.addConverter(new ClasseConverter());
        registry.addConverter(new ConfigInscriptionConverter());
        registry.addConverter(new ConfigPensionConverter());
        registry.addConverter(new ConsigneElevesConverter());
        registry.addConverter(new CyclesConverter());
        registry.addConverter(new DiplomeConverter());
        registry.addConverter(new EnseignantConverter());
        registry.addConverter(new EnseignantMatieresConverter());
        registry.addConverter(new EnseignantPrincipalConverter());
        registry.addConverter(new EvaluationConverter());
        registry.addConverter(new ExclusionElevesConverter());
        registry.addConverter(new FamilleMatiereConverter());
        registry.addConverter(new FiliereConverter());
        registry.addConverter(new FootPrintConverter());
        registry.addConverter(new GroupeMatiereConverter());
        registry.addConverter(new ImportNoteConverter());
        registry.addConverter(new MachinesConverter());
        registry.addConverter(new MatiereConverter());
        registry.addConverter(new MentionsConverter());
        registry.addConverter(new NotesConverter());
        registry.addConverter(new OccupationConverter());
        registry.addConverter(new OptionsConverter());
        registry.addConverter(new PaiementPensionsConverter());
        registry.addConverter(new ParentConverter());
        registry.addConverter(new PaysConverter());
        registry.addConverter(new PeriodeConverter());
        registry.addConverter(new PointageEnseignantsConverter());
        registry.addConverter(new RegimeConverter());
        registry.addConverter(new SalleConverter());
        registry.addConverter(new SpecialityConverter());
        registry.addConverter(new AdSchoolUserConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.AbsenceElevesConverter implements Converter<AbsenceEleves, String> {
        public String convert(AbsenceEleves absenceEleves) {
            return new StringBuilder().append(absenceEleves.getAbsenceKey()).append(" ").append(absenceEleves.getDateAbsence()).append(" ").append(absenceEleves.getDateSaisie()).append(" ").append(absenceEleves.getHeureDebut()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.AuditRecordConverter implements Converter<AuditRecord, String> {
        public String convert(AuditRecord auditRecord) {
            return new StringBuilder().append(auditRecord.getBussinessName()).append(" ").append(auditRecord.getBussinessKey()).append(" ").append(auditRecord.getCreateBy()).append(" ").append(auditRecord.getCreeLe()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.AvertissementElevesConverter implements Converter<AvertissementEleves, String> {
        public String convert(AvertissementEleves avertissementEleves) {
            return new StringBuilder().append(avertissementEleves.getAvertKey()).append(" ").append(avertissementEleves.getDateAvertissement()).append(" ").append(avertissementEleves.getDateSaisie()).append(" ").append(avertissementEleves.getDuree()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.BatimentConverter implements Converter<Batiment, String> {
        public String convert(Batiment batiment) {
            return new StringBuilder().append(batiment.getBatimentKey()).append(" ").append(batiment.getNomBatiment()).append(" ").append(batiment.getNombreEtage()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.ClasseConverter implements Converter<Classe, String> {
        public String convert(Classe classe) {
            return new StringBuilder().append(classe.getClasseKey()).append(" ").append(classe.getNomClasse()).append(" ").append(classe.getNomAbreger()).append(" ").append(classe.getNombreplace()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.ConfigInscriptionConverter implements Converter<ConfigInscription, String> {
        public String convert(ConfigInscription configInscription) {
            return new StringBuilder().append(configInscription.getConfigKey()).append(" ").append(configInscription.getMontant()).append(" ").append(configInscription.getDateLimitePaiement()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.ConfigPensionConverter implements Converter<ConfigPension, String> {
        public String convert(ConfigPension configPension) {
            return new StringBuilder().append(configPension.getConfigKey()).append(" ").append(configPension.getMontant()).append(" ").append(configPension.getTranche()).append(" ").append(configPension.getDateLimitePaiement()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.ConsigneElevesConverter implements Converter<ConsigneEleves, String> {
        public String convert(ConsigneEleves consigneEleves) {
            return new StringBuilder().append(consigneEleves.getConsigneKey()).append(" ").append(consigneEleves.getDateConsigne()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.CyclesConverter implements Converter<Cycles, String> {
        public String convert(Cycles cycles) {
            return new StringBuilder().append(cycles.getCycleKey()).append(" ").append(cycles.getLibelle()).append(" ").append(cycles.getDuree()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.DiplomeConverter implements Converter<Diplome, String> {
        public String convert(Diplome diplome) {
            return new StringBuilder().append(diplome.getDiplomekey()).append(" ").append(diplome.getLibelle()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.EnseignantConverter implements Converter<Enseignant, String> {
        public String convert(Enseignant enseignant) {
            return new StringBuilder().append(enseignant.getUserImage()).append(" ").append(enseignant.getMatricule()).append(" ").append(enseignant.getNom()).append(" ").append(enseignant.getLieuNaissance()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.EnseignantMatieresConverter implements Converter<EnseignantMatieres, String> {
        public String convert(EnseignantMatieres enseignantMatieres) {
            return new StringBuilder().append(enseignantMatieres.getValueKey()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.EnseignantPrincipalConverter implements Converter<EnseignantPrincipal, String> {
        public String convert(EnseignantPrincipal enseignantPrincipal) {
            return new StringBuilder().append(enseignantPrincipal.getValueKey()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.EvaluationConverter implements Converter<Evaluation, String> {
        public String convert(Evaluation evaluation) {
            return new StringBuilder().append(evaluation.getEvaluationKey()).append(" ").append(evaluation.getDatedebut()).append(" ").append(evaluation.getDatefin()).append(" ").append(evaluation.getPourcentage()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.ExclusionElevesConverter implements Converter<ExclusionEleves, String> {
        public String convert(ExclusionEleves exclusionEleves) {
            return new StringBuilder().append(exclusionEleves.getExclusionKey()).append(" ").append(exclusionEleves.getDatedebut()).append(" ").append(exclusionEleves.getDatefin()).append(" ").append(exclusionEleves.getDuree()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.FamilleMatiereConverter implements Converter<FamilleMatiere, String> {
        public String convert(FamilleMatiere familleMatiere) {
            return new StringBuilder().append(familleMatiere.getFamilleKey()).append(" ").append(familleMatiere.getIntitule()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.FiliereConverter implements Converter<Filiere, String> {
        public String convert(Filiere filiere) {
            return new StringBuilder().append(filiere.getFiliereKey()).append(" ").append(filiere.getLibelle()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.FootPrintConverter implements Converter<FootPrint, String> {
        public String convert(FootPrint footPrint) {
            return new StringBuilder().append(footPrint.getBussinessName()).append(" ").append(footPrint.getBussinessKey()).append(" ").append(footPrint.getCreateBy()).append(" ").append(footPrint.getCreeLe()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.GroupeMatiereConverter implements Converter<GroupeMatiere, String> {
        public String convert(GroupeMatiere groupeMatiere) {
            return new StringBuilder().append(groupeMatiere.getGroupeKey()).append(" ").append(groupeMatiere.getIntitule()).append(" ").append(groupeMatiere.getDisposition()).append(" ").append(groupeMatiere.getTotalcredit()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.ImportNoteConverter implements Converter<ImportNote, String> {
        public String convert(ImportNote importNote) {
            return new StringBuilder().append(importNote.getFichier()).append(" ").append(importNote.getChemin()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.MachinesConverter implements Converter<Machines, String> {
        public String convert(Machines machines) {
            return new StringBuilder().append(machines.getMachineKey()).append(" ").append(machines.getNomMachine()).append(" ").append(machines.getIpMachine()).append(" ").append(machines.getAdresseMac()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.MatiereConverter implements Converter<Matiere, String> {
        public String convert(Matiere matiere) {
            return new StringBuilder().append(matiere.getMatiereKey()).append(" ").append(matiere.getCodeMatiere()).append(" ").append(matiere.getIntitule()).append(" ").append(matiere.getCoefficient()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.MentionsConverter implements Converter<Mentions, String> {
        public String convert(Mentions mentions) {
            return new StringBuilder().append(mentions.getMentionKey()).append(" ").append(mentions.getIntitule()).append(" ").append(mentions.getValueMin()).append(" ").append(mentions.getValueMax()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.NotesConverter implements Converter<Notes, String> {
        public String convert(Notes notes) {
            return new StringBuilder().append(notes.getNoteKey()).append(" ").append(notes.getValeur()).append(" ").append(notes.getCoefficient()).append(" ").append(notes.getPourcentage()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.OccupationConverter implements Converter<Occupation, String> {
        public String convert(Occupation occupation) {
            return new StringBuilder().append(occupation.getOccupationKey()).append(" ").append(occupation.getHeureStart()).append(" ").append(occupation.getHeureStop()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.OptionsConverter implements Converter<Options, String> {
        public String convert(Options options) {
            return new StringBuilder().append(options.getOptionsKey()).append(" ").append(options.getLibelle()).append(" ").append(options.getNbreclasse()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.PaiementPensionsConverter implements Converter<PaiementPensions, String> {
        public String convert(PaiementPensions paiementPensions) {
            return new StringBuilder().append(paiementPensions.getPaiementKey()).append(" ").append(paiementPensions.getMontantVersement()).append(" ").append(paiementPensions.getMontantTranche()).append(" ").append(paiementPensions.getDateVersement()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.ParentConverter implements Converter<Parent, String> {
        public String convert(Parent parent) {
            return new StringBuilder().append(parent.getUserImage()).append(" ").append(parent.getMatricule()).append(" ").append(parent.getNom()).append(" ").append(parent.getLieuNaissance()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.PaysConverter implements Converter<Pays, String> {
        public String convert(Pays pays) {
            return new StringBuilder().append(pays.getLibelle()).append(" ").append(pays.getPaysKey()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.PeriodeConverter implements Converter<Periode, String> {
        public String convert(Periode periode) {
            return new StringBuilder().append(periode.getPeriodeKey()).append(" ").append(periode.getDatedebut()).append(" ").append(periode.getDatefin()).append(" ").append(periode.getLibelle()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.PointageEnseignantsConverter implements Converter<PointageEnseignants, String> {
        public String convert(PointageEnseignants pointageEnseignants) {
            return new StringBuilder().append(pointageEnseignants.getPointageKey()).append(" ").append(pointageEnseignants.getDatedebut()).append(" ").append(pointageEnseignants.getDuree()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.RegimeConverter implements Converter<Regime, String> {
        public String convert(Regime regime) {
            return new StringBuilder().append(regime.getRegimeKey()).append(" ").append(regime.getLibelle()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.SalleConverter implements Converter<Salle, String> {
        public String convert(Salle salle) {
            return new StringBuilder().append(salle.getSalleKey()).append(" ").append(salle.getNomsalle()).append(" ").append(salle.getNombrePlace()).append(" ").append(salle.getLongueur()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.SpecialityConverter implements Converter<Speciality, String> {
        public String convert(Speciality speciality) {
            return new StringBuilder().append(speciality.getSpecialityKey()).append(" ").append(speciality.getLibelle()).append(" ").append(speciality.getNbreclasse()).toString();
        }
        
    }
    
    static class adschool.web.ApplicationConversionServiceFactoryBean.AdSchoolUserConverter implements Converter<AdSchoolUser, String> {
        public String convert(AdSchoolUser adSchoolUser) {
            return new StringBuilder().append(adSchoolUser.getUserName()).append(" ").append(adSchoolUser.getUserNumber()).append(" ").append(adSchoolUser.getFirstName()).append(" ").append(adSchoolUser.getLastName()).toString();
        }
        
    }
    
}
