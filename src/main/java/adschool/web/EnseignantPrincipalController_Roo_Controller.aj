// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package adschool.web;

import adschool.domain.AnneeScolaire;
import adschool.domain.Enseignant;
import adschool.domain.EnseignantPrincipal;
import adschool.domain.Matiere;
import java.io.UnsupportedEncodingException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.String;
import java.util.Collection;
import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;

privileged aspect EnseignantPrincipalController_Roo_Controller {
    
    @RequestMapping(method = RequestMethod.POST)
    public String EnseignantPrincipalController.create(@Valid EnseignantPrincipal enseignantPrincipal, BindingResult bindingResult, Model uiModel, HttpServletRequest httpServletRequest) {
        if (bindingResult.hasErrors()) {
            uiModel.addAttribute("enseignantPrincipal", enseignantPrincipal);
            return "enseignantprincipals/create";
        }
        uiModel.asMap().clear();
        enseignantPrincipal.persist();
        return "redirect:/enseignantprincipals/" + encodeUrlPathSegment(enseignantPrincipal.getId().toString(), httpServletRequest);
    }
    
    @RequestMapping(params = "form", method = RequestMethod.GET)
    public String EnseignantPrincipalController.createForm(Model uiModel) {
        uiModel.addAttribute("enseignantPrincipal", new EnseignantPrincipal());
        return "enseignantprincipals/create";
    }
    
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public String EnseignantPrincipalController.show(@PathVariable("id") Long id, Model uiModel) {
        uiModel.addAttribute("enseignantprincipal", EnseignantPrincipal.findEnseignantPrincipal(id));
        uiModel.addAttribute("itemId", id);
        return "enseignantprincipals/show";
    }
    
    @RequestMapping(method = RequestMethod.GET)
    public String EnseignantPrincipalController.list(@RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            uiModel.addAttribute("enseignantprincipals", EnseignantPrincipal.findEnseignantPrincipalEntries(page == null ? 0 : (page.intValue() - 1) * sizeNo, sizeNo));
            float nrOfPages = (float) EnseignantPrincipal.countEnseignantPrincipals() / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("enseignantprincipals", EnseignantPrincipal.findAllEnseignantPrincipals());
        }
        return "enseignantprincipals/list";
    }
    
    @RequestMapping(method = RequestMethod.PUT)
    public String EnseignantPrincipalController.update(@Valid EnseignantPrincipal enseignantPrincipal, BindingResult bindingResult, Model uiModel, HttpServletRequest httpServletRequest) {
        if (bindingResult.hasErrors()) {
            uiModel.addAttribute("enseignantPrincipal", enseignantPrincipal);
            return "enseignantprincipals/update";
        }
        uiModel.asMap().clear();
        enseignantPrincipal.merge();
        return "redirect:/enseignantprincipals/" + encodeUrlPathSegment(enseignantPrincipal.getId().toString(), httpServletRequest);
    }
    
    @RequestMapping(value = "/{id}", params = "form", method = RequestMethod.GET)
    public String EnseignantPrincipalController.updateForm(@PathVariable("id") Long id, Model uiModel) {
        uiModel.addAttribute("enseignantPrincipal", EnseignantPrincipal.findEnseignantPrincipal(id));
        return "enseignantprincipals/update";
    }
    
    @RequestMapping(value = "/{id}", method = RequestMethod.DELETE)
    public String EnseignantPrincipalController.delete(@PathVariable("id") Long id, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        EnseignantPrincipal.findEnseignantPrincipal(id).remove();
        uiModel.asMap().clear();
        uiModel.addAttribute("page", (page == null) ? "1" : page.toString());
        uiModel.addAttribute("size", (size == null) ? "10" : size.toString());
        return "redirect:/enseignantprincipals";
    }
    
    @ModelAttribute("anneescolaires")
    public Collection<AnneeScolaire> EnseignantPrincipalController.populateAnneeScolaires() {
        return AnneeScolaire.findAllAnneeScolaires();
    }
    
    @ModelAttribute("enseignants")
    public Collection<Enseignant> EnseignantPrincipalController.populateEnseignants() {
        return Enseignant.findAllEnseignants();
    }
    
    @ModelAttribute("enseignantprincipals")
    public Collection<EnseignantPrincipal> EnseignantPrincipalController.populateEnseignantPrincipals() {
        return EnseignantPrincipal.findAllEnseignantPrincipals();
    }
    
    @ModelAttribute("matieres")
    public Collection<Matiere> EnseignantPrincipalController.populateMatieres() {
        return Matiere.findAllMatieres();
    }
    
    String EnseignantPrincipalController.encodeUrlPathSegment(String pathSegment, HttpServletRequest httpServletRequest) {
        String enc = httpServletRequest.getCharacterEncoding();
        if (enc == null) {
            enc = WebUtils.DEFAULT_CHARACTER_ENCODING;
        }
        try {
            pathSegment = UriUtils.encodePathSegment(pathSegment, enc);
        }
        catch (UnsupportedEncodingException uee) {}
        return pathSegment;
    }
    
}
